/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TRAINING;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */
public class user_update extends javax.swing.JFrame {

    Connection con;
    Statement s;
    ResultSet rslt;
    PreparedStatement pst;

    /**
     * Creates new form user_update
     */
    public user_update() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UID = new javax.swing.JLabel();
        NAME = new javax.swing.JTextField();
        AGE = new javax.swing.JTextField();
        GENDER = new javax.swing.JTextField();
        btn_add_update = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        UID.setText("jLabel1");

        btn_add_update.setText("UPDATE");
        btn_add_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GENDER, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AGE, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NAME, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UID, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(btn_add_update)))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(UID, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(NAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(AGE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(GENDER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btn_add_update)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_add_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_updateActionPerformed
        //  click to update
        table_connectivity tc = new table_connectivity();
        String ID = UID.getText();
        String name = NAME.getText();
        String age = AGE.getText();
        String gender = GENDER.getText();

        if ("UPDATE".equals(btn_add_update.getText())) {
            try {

                Class.forName("com.mysql.jdbc.Driver");
                //String connect="jdbc:derby://localhost:1527/RuDonDB";
                String connect = "jdbc:mysql://localhost/jbrposdb2";
                con = DriverManager.getConnection(connect);
                // JOptionPane.showMessageDialog(null,"Connec
                String DBQ = "SELECT ID, NAME, AGE, GENDER from user";
                s = con.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE);
                rslt = s.executeQuery(DBQ);
                while (rslt.next()) {
                    if (rslt.getString("ID").equals(ID)) {
                        rslt.updateString(2, name);
                        rslt.updateString(3, age);
                        rslt.updateString(4, gender);

                        rslt.updateRow();
                    } else {

                    }

                }

                JOptionPane.showMessageDialog(null, "Update Successful");

                UID.setText("");
                NAME.setText(null);
                AGE.setText(null);
                GENDER.setText(null);

            } catch (ClassNotFoundException | SQLException | HeadlessException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } finally {
                // close JDBC objects
                try {
                    if (rslt != null) {
                        rslt.close();
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                try {
                    if (s != null) {
                        s.close();
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                try {
                    if (con != null) {
                        con.close();
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }

        } else if ("ADD".equals(btn_add_update.getText())) {

            try {

                Class.forName("com.mysql.jdbc.Driver");
                //String connect="jdbc:derby://localhost:1527/RuDonDB";
                String connect = "jdbc:mysql://localhost/jbrposdb2";
                con = DriverManager.getConnection(connect);
                // JOptionPane.showMessageDialog(null,"Connec
                String DBQ = "SELECT * from user";
                s = con.createStatement();
                rslt = s.executeQuery(DBQ);

                pst = con.prepareStatement("INSERT INTO user(NAME, AGE, GENDER)VALUES(?,?,?)");
                while (rslt.next()) {

                }
                pst.setString(1, name);
                pst.setString(2, age);
                pst.setString(3, gender);
                pst.executeUpdate();

                JOptionPane.showMessageDialog(null, "Add Successful");

                UID.setText("");
                NAME.setText(null);
                AGE.setText(null);
                GENDER.setText(null);

            } catch (ClassNotFoundException | SQLException | HeadlessException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } finally {
                // close JDBC objects
                try {
                    if (rslt != null) {
                        rslt.close();
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                try {
                    if (s != null) {
                        s.close();
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                try {
                    if (con != null) {
                        con.close();
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
            tc.load();

        }
    }//GEN-LAST:event_btn_add_updateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(user_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(user_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(user_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(user_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new user_update().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField AGE;
    public javax.swing.JTextField GENDER;
    public javax.swing.JTextField NAME;
    public javax.swing.JLabel UID;
    public javax.swing.JButton btn_add_update;
    // End of variables declaration//GEN-END:variables
}
